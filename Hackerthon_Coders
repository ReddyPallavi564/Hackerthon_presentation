import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Sample Data Generation
np.random.seed(42)
years = np.arange(2000, 2021)
avg_temp = np.array([14 + 0.02*i + np.random.normal(0, 0.2) for i in range(len(years))])  # Gradual increase with noise

# Create a DataFrame
data = pd.DataFrame({
    'Year': years,
    'AvgTemp': avg_temp
})

# Features and Target
X = data[['Year']]
y = data['AvgTemp']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = LinearRegression()
model.fit(X_train, y_train)

# Prediction
y_pred = model.predict(X_test)

# Evaluation
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.4f}")

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(data['Year'], data['AvgTemp'], label='Actual Data', marker='o')
plt.plot(X_test, y_pred, label='Predicted Data', linestyle='--', marker='x', color='r')
plt.xlabel('Year')
plt.ylabel('Average Temperature (Â°C)')
plt.title('Local Climate Change Impact: Temperature Prediction')
plt.legend()
plt.show()
